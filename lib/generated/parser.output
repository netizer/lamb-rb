

-------- Grammar --------

rule 1 Program: 
rule 2 Program: Expressions
rule 3 Expressions: Expression
rule 4 Expressions: Expressions Terminator Expression
rule 5 Expressions: Expressions Terminator
rule 6 Expressions: Terminator
rule 7 Expression: Literal
rule 8 Expression: Get
rule 9 Expression: Set
rule 10 Expression: Array
rule 11 Expression: Call
rule 12 Expression: Def
rule 13 Expression: "(" Expression ")"
rule 14 CommaSeparatedItems: Expression "," Expression
rule 15 CommaSeparatedItems: CommaSeparatedItems "," Expression
rule 16 Terminator: NEWLINE
rule 17 Terminator: ";"
rule 18 Literal: STRING
rule 19 Get: IDENTIFIER
rule 20 Get: Get "." IDENTIFIER
rule 21 Set: IDENTIFIER "=" Expression
rule 22 Set: IDENTIFIER "=" Block
rule 23 Array: "[" "]"
rule 24 Array: "[" Expression "]"
rule 25 Array: "[" CommaSeparatedItems "]"
rule 26 Call: FUNCTION_CALL_NO_ARGS
rule 27 Call: FUNCTION_CALL Block
rule 28 Call: FUNCTION_CALL Expression ";"
rule 29 Call: FUNCTION_CALL CommaSeparatedItems ";"
rule 30 Def: Array ARROW Expression ";"
rule 31 Def: Array ARROW CommaSeparatedItems ";"
rule 32 Def: Array ARROW Block
rule 33 Block: INDENT Expressions DEDENT

------- Symbols -------

**Nonterminals, with rules where they appear

  $start (19)
    on right: 
    on left : 
  Program (20)
    on right: 
    on left : 1 2
  Expressions (21)
    on right: 2 4 5 33
    on left : 3 4 5 6
  Expression (22)
    on right: 3 4 13 14 15 21 24 28 30
    on left : 7 8 9 10 11 12 13
  Terminator (23)
    on right: 4 5 6
    on left : 16 17
  Literal (24)
    on right: 7
    on left : 18
  Get (25)
    on right: 8 20
    on left : 19 20
  Set (26)
    on right: 9
    on left : 21 22
  Array (27)
    on right: 10 30 31 32
    on left : 23 24 25
  Call (28)
    on right: 11
    on left : 26 27 28 29
  Def (29)
    on right: 12
    on left : 30 31 32
  CommaSeparatedItems (30)
    on right: 15 25 29 31
    on left : 14 15
  Block (31)
    on right: 22 27 32
    on left : 33

**Terminals, with rules where they appear

  $end (0) 
  error (1) 
  NEWLINE (2) 16
  STRING (3) 18
  IDENTIFIER (4) 19 20 21 22
  FUNCTION_CALL (5) 27 28 29
  FUNCTION_CALL_NO_ARGS (6) 26
  ARROW (7) 30 31 32
  INDENT (8) 33
  DEDENT (9) 33
  "." (10) 20
  "=>" (11) 
  "=" (12) 21 22
  "(" (13) 13
  ")" (14) 13
  "," (15) 14 15
  ";" (16) 17 28 29 30 31
  "[" (17) 23 24 25
  "]" (18) 23 24 25

--------- State ---------

state 0


  NEWLINE       shift, and go to state 12
  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  ";"           shift, and go to state 13
  "["           shift, and go to state 16
  $default      reduce using rule 1 (Program)

  Program       go to state 1
  Expressions   go to state 2
  Expression    go to state 3
  Terminator    go to state 4
  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10

state 1


  $end          shift, and go to state 19


state 2

   2) Program : Expressions _
   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator

  NEWLINE       shift, and go to state 12
  ";"           shift, and go to state 13
  $default      reduce using rule 2 (Program)

  Terminator    go to state 20

state 3

   3) Expressions : Expression _

  $default      reduce using rule 3 (Expressions)


state 4

   6) Expressions : Terminator _

  $default      reduce using rule 6 (Expressions)


state 5

   7) Expression : Literal _

  $default      reduce using rule 7 (Expression)


state 6

   8) Expression : Get _
  20) Get : Get _ "." IDENTIFIER

  "."           shift, and go to state 21
  $default      reduce using rule 8 (Expression)


state 7

   9) Expression : Set _

  $default      reduce using rule 9 (Expression)


state 8

  10) Expression : Array _
  30) Def : Array _ ARROW Expression ";"
  31) Def : Array _ ARROW CommaSeparatedItems ";"
  32) Def : Array _ ARROW Block

  ARROW         shift, and go to state 22
  $default      reduce using rule 10 (Expression)


state 9

  11) Expression : Call _

  $default      reduce using rule 11 (Expression)


state 10

  12) Expression : Def _

  $default      reduce using rule 12 (Expression)


state 11

  13) Expression : "(" _ Expression ")"

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 23

state 12

  16) Terminator : NEWLINE _

  $default      reduce using rule 16 (Terminator)


state 13

  17) Terminator : ";" _

  $default      reduce using rule 17 (Terminator)


state 14

  18) Literal : STRING _

  $default      reduce using rule 18 (Literal)


state 15

  19) Get : IDENTIFIER _
  21) Set : IDENTIFIER _ "=" Expression
  22) Set : IDENTIFIER _ "=" Block

  "="           shift, and go to state 24
  $default      reduce using rule 19 (Get)


state 16

  23) Array : "[" _ "]"
  24) Array : "[" _ Expression "]"
  25) Array : "[" _ CommaSeparatedItems "]"

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  "["           shift, and go to state 16
  "]"           shift, and go to state 27

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 25
  CommaSeparatedItems  go to state 26

state 17

  26) Call : FUNCTION_CALL_NO_ARGS _

  $default      reduce using rule 26 (Call)


state 18

  27) Call : FUNCTION_CALL _ Block
  28) Call : FUNCTION_CALL _ Expression ";"
  29) Call : FUNCTION_CALL _ CommaSeparatedItems ";"

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  INDENT        shift, and go to state 31
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 28
  CommaSeparatedItems  go to state 29
  Block         go to state 30

state 19


  $end          shift, and go to state 32


state 20

   4) Expressions : Expressions Terminator _ Expression
   5) Expressions : Expressions Terminator _

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  "["           shift, and go to state 16
  $default      reduce using rule 5 (Expressions)

  Expression    go to state 33
  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10

state 21

  20) Get : Get "." _ IDENTIFIER

  IDENTIFIER    shift, and go to state 34


state 22

  30) Def : Array ARROW _ Expression ";"
  31) Def : Array ARROW _ CommaSeparatedItems ";"
  32) Def : Array ARROW _ Block

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  INDENT        shift, and go to state 31
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 35
  CommaSeparatedItems  go to state 36
  Block         go to state 37

state 23

  13) Expression : "(" Expression _ ")"

  ")"           shift, and go to state 38


state 24

  21) Set : IDENTIFIER "=" _ Expression
  22) Set : IDENTIFIER "=" _ Block

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  INDENT        shift, and go to state 31
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 39
  Block         go to state 40

state 25

  14) CommaSeparatedItems : Expression _ "," Expression
  24) Array : "[" Expression _ "]"

  ","           shift, and go to state 41
  "]"           shift, and go to state 42


state 26

  15) CommaSeparatedItems : CommaSeparatedItems _ "," Expression
  25) Array : "[" CommaSeparatedItems _ "]"

  ","           shift, and go to state 43
  "]"           shift, and go to state 44


state 27

  23) Array : "[" "]" _

  $default      reduce using rule 23 (Array)


state 28

  14) CommaSeparatedItems : Expression _ "," Expression
  28) Call : FUNCTION_CALL Expression _ ";"

  ","           shift, and go to state 41
  ";"           shift, and go to state 45


state 29

  15) CommaSeparatedItems : CommaSeparatedItems _ "," Expression
  29) Call : FUNCTION_CALL CommaSeparatedItems _ ";"

  ","           shift, and go to state 43
  ";"           shift, and go to state 46


state 30

  27) Call : FUNCTION_CALL Block _

  $default      reduce using rule 27 (Call)


state 31

  33) Block : INDENT _ Expressions DEDENT

  NEWLINE       shift, and go to state 12
  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  ";"           shift, and go to state 13
  "["           shift, and go to state 16

  Expression    go to state 3
  Expressions   go to state 47
  Terminator    go to state 4
  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10

state 32


  $default      accept


state 33

   4) Expressions : Expressions Terminator Expression _

  $default      reduce using rule 4 (Expressions)


state 34

  20) Get : Get "." IDENTIFIER _

  $default      reduce using rule 20 (Get)


state 35

  14) CommaSeparatedItems : Expression _ "," Expression
  30) Def : Array ARROW Expression _ ";"

  ","           shift, and go to state 41
  ";"           shift, and go to state 48


state 36

  15) CommaSeparatedItems : CommaSeparatedItems _ "," Expression
  31) Def : Array ARROW CommaSeparatedItems _ ";"

  ","           shift, and go to state 43
  ";"           shift, and go to state 49


state 37

  32) Def : Array ARROW Block _

  $default      reduce using rule 32 (Def)


state 38

  13) Expression : "(" Expression ")" _

  $default      reduce using rule 13 (Expression)


state 39

  21) Set : IDENTIFIER "=" Expression _

  $default      reduce using rule 21 (Set)


state 40

  22) Set : IDENTIFIER "=" Block _

  $default      reduce using rule 22 (Set)


state 41

  14) CommaSeparatedItems : Expression "," _ Expression

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 50

state 42

  24) Array : "[" Expression "]" _

  $default      reduce using rule 24 (Array)


state 43

  15) CommaSeparatedItems : CommaSeparatedItems "," _ Expression

  STRING        shift, and go to state 14
  IDENTIFIER    shift, and go to state 15
  FUNCTION_CALL  shift, and go to state 18
  FUNCTION_CALL_NO_ARGS  shift, and go to state 17
  "("           shift, and go to state 11
  "["           shift, and go to state 16

  Literal       go to state 5
  Get           go to state 6
  Set           go to state 7
  Array         go to state 8
  Call          go to state 9
  Def           go to state 10
  Expression    go to state 51

state 44

  25) Array : "[" CommaSeparatedItems "]" _

  $default      reduce using rule 25 (Array)


state 45

  28) Call : FUNCTION_CALL Expression ";" _

  $default      reduce using rule 28 (Call)


state 46

  29) Call : FUNCTION_CALL CommaSeparatedItems ";" _

  $default      reduce using rule 29 (Call)


state 47

   4) Expressions : Expressions _ Terminator Expression
   5) Expressions : Expressions _ Terminator
  33) Block : INDENT Expressions _ DEDENT

  NEWLINE       shift, and go to state 12
  DEDENT        shift, and go to state 52
  ";"           shift, and go to state 13

  Terminator    go to state 20

state 48

  30) Def : Array ARROW Expression ";" _

  $default      reduce using rule 30 (Def)


state 49

  31) Def : Array ARROW CommaSeparatedItems ";" _

  $default      reduce using rule 31 (Def)


state 50

  14) CommaSeparatedItems : Expression "," Expression _

  $default      reduce using rule 14 (CommaSeparatedItems)


state 51

  15) CommaSeparatedItems : CommaSeparatedItems "," Expression _

  $default      reduce using rule 15 (CommaSeparatedItems)


state 52

  33) Block : INDENT Expressions DEDENT _

  $default      reduce using rule 33 (Block)

